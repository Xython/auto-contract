from .builtin_contracts import Case
from .visitor import ContractPerformer
from .base import Contract
from .sym_ana import to_tagged_ast
from .unparse import Unparser
from typing import Type
import os
import io
import ast
from yapf.yapflib.yapf_api import FormatCode


def perform(filename, *contracts: Type[Contract]):
    main, ext = os.path.splitext(filename)
    assert ext == '.py'
    with open(filename) as fr:
        source = fr.read()
        fr.read()
    node = ast.parse(source)
    node = to_tagged_ast(node)
    node = ContractPerformer(*contracts).visit(node)

    with io.StringIO() as s, open(main + '.pyi', 'w') as fw:
        Unparser(node, file=s)
        fw.write('# this file is auto generated by contract.py')
        fw.write(FormatCode(s.getvalue())[0])
