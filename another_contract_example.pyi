# this file is auto generated by contract.py
from my_contract_decls import *
from contract import contract
from typing import overload, Union


class Animal():
    pass


class Dog(Animal):
    pass


class Cat(Animal):
    pass


@contract(DispatchByName)
def process_animal(inst: Animal, *args, **kwargs):
    raise NotImplementedError


@contract(DispatchByName)
def process_dog(inst: Dog, *args, **kwargs):
    return NotImplementedError


@contract(DispatchByName)
def process_cat(inst: Cat, *args, **kwargs):
    return NotImplementedError


@overload
def fn(x: int, y: str, z):
    pass


@overload
def fn(x: Animal, y, z: float):
    pass


@contract(AutoOverload)
def fn(x, y, z):
    if (isinstance(x, int) and isinstance(y, str)):
        ...
    elif (isinstance(x, Animal) and isinstance(z, float)):
        ...
    ...
